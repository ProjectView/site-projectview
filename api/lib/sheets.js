/**
 * Google Sheets API utilities for article registry
 */

export async function appendArticleToSheet(frontmatter) {
  try {
    const { google } = await import('googleapis');

    const sheets = google.sheets({
      version: 'v4',
      auth: process.env.GOOGLE_SHEETS_API_KEY
    });

    const spreadsheetId = process.env.GOOGLE_SHEETS_SPREADSHEET_ID;

    // Format: [ID, Title, Date, Category, Tags, Topics, Keywords, Status, URL, Notes]
    const row = [
      frontmatter.id,
      frontmatter.title,
      frontmatter.date,
      frontmatter.category,
      (frontmatter.tags || []).join('|'),
      frontmatter.category, // Topics = Category for now
      (frontmatter.seoKeywords || []).join('|'),
      'published',
      `https://projectview.fr/article/${frontmatter.id}`,
      `Generated by ProjectBot on ${new Date().toISOString()}`
    ];

    const response = await sheets.spreadsheets.values.append({
      spreadsheetId,
      range: 'Articles!A:J',
      valueInputOption: 'USER_ENTERED',
      resource: {
        values: [row]
      }
    });

    return {
      success: true,
      message: 'Article added to Google Sheet',
      updatedCells: response.data.updates.updatedCells
    };
  } catch (error) {
    console.error('Google Sheets error:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

export async function getExistingArticles() {
  try {
    const { google } = await import('googleapis');

    const sheets = google.sheets({
      version: 'v4',
      auth: process.env.GOOGLE_SHEETS_API_KEY
    });

    const spreadsheetId = process.env.GOOGLE_SHEETS_SPREADSHEET_ID;

    const response = await sheets.spreadsheets.values.get({
      spreadsheetId,
      range: 'Articles!A:B'
    });

    const articles = [];
    if (response.data.values) {
      // Skip header row
      for (let i = 1; i < response.data.values.length; i++) {
        const row = response.data.values[i];
        if (row[0]) {
          articles.push({
            id: row[0],
            title: row[1] || ''
          });
        }
      }
    }

    return {
      success: true,
      count: articles.length,
      articles
    };
  } catch (error) {
    console.error('Google Sheets fetch error:', error.message);
    return {
      success: false,
      error: error.message,
      articles: []
    };
  }
}
