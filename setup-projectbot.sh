#!/bin/bash

# Script de setup complet pour ProjectBot
# Utilisation: bash setup-projectbot.sh

set -e

echo "üöÄ Setup complet ProjectBot - Automatisation d'articles"
echo "=================================================="
echo ""

# V√©rifier que Netlify CLI est install√©
if ! command -v netlify &> /dev/null; then
    echo "üì¶ Installation de Netlify CLI..."
    npm install -g netlify-cli
fi

echo "‚úÖ Netlify CLI install√©"
echo ""

# V√©rifier la connexion Netlify
echo "üîê V√©rification de la connexion Netlify..."
if ! netlify status &> /dev/null; then
    echo ""
    echo "‚ùå Vous n'√™tes pas connect√© √† Netlify"
    echo ""
    echo "Options:"
    echo "1. Interactive login:"
    echo "   netlify login"
    echo ""
    echo "2. Avec un token:"
    echo "   export NETLIFY_AUTH_TOKEN='votre-token'"
    echo "   netlify link"
    echo ""
    exit 1
fi

echo "‚úÖ Connect√© √† Netlify"
echo ""

# Lier le site si n√©cessaire
echo "üîó Liaison du site √† Netlify..."
netlify link --silent 2>/dev/null || netlify link
echo "‚úÖ Site li√©"
echo ""

# R√©cup√©rer les variables existantes
echo "üìã Configuration des variables d'environnement"
echo "=================================================="
echo ""

# Variables obligatoires
echo "Variables OBLIGATOIRES:"
echo ""

read -p "üìå Token d'acc√®s GitHub (avec permission 'repo'): " GITHUB_TOKEN
if [ -z "$GITHUB_TOKEN" ]; then
    echo "‚ùå GITHUB_TOKEN est obligatoire!"
    exit 1
fi
netlify env:set GITHUB_TOKEN "$GITHUB_TOKEN"
echo "‚úÖ GITHUB_TOKEN d√©fini"
echo ""

read -p "üìå Propri√©taire du repo GitHub (ex: ProjectView): " GITHUB_REPO_OWNER
if [ -z "$GITHUB_REPO_OWNER" ]; then
    echo "‚ùå GITHUB_REPO_OWNER est obligatoire!"
    exit 1
fi
netlify env:set GITHUB_REPO_OWNER "$GITHUB_REPO_OWNER"
echo "‚úÖ GITHUB_REPO_OWNER d√©fini"
echo ""

read -p "üìå Nom du repo GitHub (ex: site-projectview): " GITHUB_REPO_NAME
if [ -z "$GITHUB_REPO_NAME" ]; then
    echo "‚ùå GITHUB_REPO_NAME est obligatoire!"
    exit 1
fi
netlify env:set GITHUB_REPO_NAME "$GITHUB_REPO_NAME"
echo "‚úÖ GITHUB_REPO_NAME d√©fini"
echo ""

# Variables optionnelles
echo "Variables OPTIONNELLES (appuyez sur Entr√©e pour ignorer):"
echo ""

read -p "üìå Google Sheets API Key (optionnel): " GOOGLE_SHEETS_API_KEY
if [ ! -z "$GOOGLE_SHEETS_API_KEY" ]; then
    netlify env:set GOOGLE_SHEETS_API_KEY "$GOOGLE_SHEETS_API_KEY"
    echo "‚úÖ GOOGLE_SHEETS_API_KEY d√©fini"
fi
echo ""

read -p "üìå Google Sheets Spreadsheet ID (optionnel): " GOOGLE_SHEETS_SPREADSHEET_ID
if [ ! -z "$GOOGLE_SHEETS_SPREADSHEET_ID" ]; then
    netlify env:set GOOGLE_SHEETS_SPREADSHEET_ID "$GOOGLE_SHEETS_SPREADSHEET_ID"
    echo "‚úÖ GOOGLE_SHEETS_SPREADSHEET_ID d√©fini"
fi
echo ""

read -p "üìå Telegram Bot Token (optionnel): " TELEGRAM_BOT_TOKEN
if [ ! -z "$TELEGRAM_BOT_TOKEN" ]; then
    netlify env:set TELEGRAM_BOT_TOKEN "$TELEGRAM_BOT_TOKEN"
    echo "‚úÖ TELEGRAM_BOT_TOKEN d√©fini"
fi
echo ""

read -p "üìå Telegram Chat ID (optionnel): " TELEGRAM_CHAT_ID
if [ ! -z "$TELEGRAM_CHAT_ID" ]; then
    netlify env:set TELEGRAM_CHAT_ID "$TELEGRAM_CHAT_ID"
    echo "‚úÖ TELEGRAM_CHAT_ID d√©fini"
fi
echo ""

# Afficher les variables configur√©es
echo "=================================================="
echo "‚úÖ Variables d'environnement configur√©es:"
echo "=================================================="
echo ""
netlify env:list
echo ""

# V√©rifier le webhook
echo "üß™ V√©rification du webhook..."
if netlify functions:list | grep -q "n8n-webhook"; then
    echo "‚úÖ Fonction n8n-webhook disponible"
else
    echo "‚ö†Ô∏è  Fonction n8n-webhook non trouv√©e (elle sera cr√©√©e au prochain d√©ploiement)"
fi
echo ""

echo "=================================================="
echo "‚úÖ Setup compl√©t√© avec succ√®s!"
echo "=================================================="
echo ""
echo "Prochaines √©tapes:"
echo ""
echo "1. üì¶ Importe le workflow N8N:"
echo "   - Ouvre N8N"
echo "   - Importe: N8N_WORKFLOW_UPDATED.json"
echo "   - Remplace les anciens nodes"
echo ""
echo "2. üöÄ D√©ploie le code:"
echo "   - git add ."
echo "   - git commit -m 'Setup ProjectBot'"
echo "   - git push"
echo ""
echo "3. üì± Teste via Telegram:"
echo "   - Envoie un message √† ProjectBot"
echo "   - Il devrait te proposer 3 id√©es d'articles"
echo ""
echo "4. ‚ú® G√©n√®re un article:"
echo "   - Choisis une id√©e"
echo "   - Choisis le format (simple ou riche)"
echo "   - Publie"
echo "   - L'article s'cr√©e automatiquement sur GitHub!"
echo ""
echo "üìö Docs compl√®tes: SETUP_PROJECTBOT.md"
echo ""
